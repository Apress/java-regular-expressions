#Email validator that adheres directly to the specification 
#for email address naming. It allows for everything from 
#ipaddress and country-code domains, to very rare characters 
#in the username.  
email=^([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$

#Japanese postal codes  
zipZP=^\d{3}-\d{4}$

#US postal codes  
zipUS=^\d{5}\p{Punct}?\s?(?:\d{4})?$

#Dutch postal code
zipNL=^[0-9]{4}\s*[a-zA-Z]{2}$

#Argentinean postal code
zipAR=^\d{3}-\d{4}$

#Swedish postal code ;
zipSE=^(s-|S-){0,1}[0-9]{3}\s?[0-9]{2}$

#Canadian postal code
zipCA=^([A-Z]\d[A-Z]\s\d[A-Z]\d)$

#UK postal code
zipUK=^[a-zA-Z]{1,2}[0-9][0-9A-Za-z]{0,1} {0,1}[0-9][A-Za-z]{2}$

#This regular expressions matches dates of the form XX/XX/YYYY 
#where XX can be 1 or 2 digits long and YYYY is always 4 
#digits long.  
date=^\d{1,2}\/\d{1,2}\/\d{4}$ 

#extracts the title element from an html page
htmlTitle=<((?i)TITLE>)(\s*.*\s*)</(\1)

#slow email example
slowEmail=^[A-Za-z0-9#_!'\(\)\-]+([A-Za-z0-9#_!'\(\)\.\-]+)[EMAIL PROTECTED]'\(\)\-]+[\.]+([AZa-z0-9#_!'\(\)\.\-]+)+$

#Exception parser
#exRegex=(.*(?i)\.Exception)
exRegex=\s([a-zA-Z.]*\.[a-zA-Z.]*Exception)

phoneNumber=(?:\d{3})?\d{3}\d{4}

CCcard=^((?:4\d{3})|(?:5[1-5]\d{2})|(?:6011)|(?:3[68]\d{2})|(?:30[012345]\d))[ -]?(\d{4})[ -]?(\d{4})[ -]?(\d{4}|3[4,7]\d{13})$ 

SuperEmail=^([a-z0-9_\-])+(\.([a-z0-9_\-])+)*@((\[(((([0-1])?([0-9])?[0-9])|(2[0-4][0-9])|(2[0-5][0-5])))\.(((([0-1])?([0-9])?[0-9])|(2[0-4][0-9])|(2[0-5][0-5])))\.(((([0-1])?([0-9])?[0-9])|(2[0-4][0-9])|(2[0-5][0-5])))\.(((([0-1])?([0-9])?[0-9])|(2[0-4][0-9])|(2[0-5][0-5]))\]))|((([a-z0-9\-])+\.)+([a-z]{2}\.[a-z]{2}|[a-z]{3})))$

floatingPoint=^[-+]?\d*\.?\d*$

allPhones=(?:\d{3}\p{Punct}?\s?){1,2}\d{4}
